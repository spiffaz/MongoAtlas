name: Terraform Deploy

on:
  push:
    branches:
      - main

env:
  TF_LOG: INFO

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      mongodb_atlas_api_pub_key: ${{ secrets.mongodb_atlas_api_pub_key }}
      mongodb_atlas_api_pri_key: ${{ secrets.mongodb_atlas_api_pri_key }}
      mongodb_atlas_org_id: ${{ secrets.mongodb_atlas_org_id }}
      aws_account_id: ${{ secrets.aws_account_id }}
      datadog_api_key: ${{ secrets.datadog_api_key }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set Up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.5.0

      - name: Initialize Terraform
        id: init
        run: terraform init 

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -no-color 2>&1 | tee /tmp/plan.txt
          sed -i '/Refreshing state.../d' /tmp/plan.txt
        continue-on-error: true
      
      - uses: actions/github-script@v4.0.2
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require("fs");
            const plan = fs.readFileSync("/tmp/plan.txt", "utf8");
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ${{ steps.validate.outputs.stdout }}
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            
            <details><summary>Show Plan</summary>
            
            \`\`\`${ plan }\`\`\`
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })


      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve

      - name: Terraform Destroy
        run: terraform destroy -auto-approve



